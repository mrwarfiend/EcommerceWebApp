// <auto-generated />
using System;
using EcommerceProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EcommerceProject.Migrations
{
    [DbContext(typeof(ShoppingContext))]
    partial class ShoppingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EcommerceProject.Models.Cart", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool>("check")
                        .HasColumnType("bit");

                    b.Property<int>("count")
                        .HasColumnType("int");

                    b.Property<int>("prodId")
                        .HasColumnType("int");

                    b.Property<float>("subtotal")
                        .HasColumnType("real");

                    b.Property<float>("tax")
                        .HasColumnType("real");

                    b.Property<DateTime>("timeStamp")
                        .HasColumnType("datetime2");

                    b.Property<float>("total")
                        .HasColumnType("real");

                    b.Property<string>("userId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("prodId");

                    b.ToTable("cart");
                });

            modelBuilder.Entity("EcommerceProject.Models.Category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("category");
                });

            modelBuilder.Entity("EcommerceProject.Models.Inventory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("count")
                        .HasColumnType("int");

                    b.Property<int>("prodId")
                        .HasColumnType("int");

                    b.Property<int>("reorderLevel")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("prodId");

                    b.ToTable("inventory");
                });

            modelBuilder.Entity("EcommerceProject.Models.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("categId")
                        .HasColumnType("int");

                    b.Property<int>("count")
                        .HasColumnType("int");

                    b.Property<string>("desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.Property<float>("tax")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.HasIndex("categId");

                    b.ToTable("product");
                });

            modelBuilder.Entity("EcommerceProject.Models.ProductsSold", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("count")
                        .HasColumnType("int");

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.Property<int>("prodId")
                        .HasColumnType("int");

                    b.Property<float>("tax")
                        .HasColumnType("real");

                    b.Property<DateTime>("timeStamp")
                        .HasColumnType("datetime2");

                    b.Property<float>("totalPrice")
                        .HasColumnType("real");

                    b.Property<string>("userId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("prodId");

                    b.ToTable("productsSold");
                });

            modelBuilder.Entity("EcommerceProject.Models.Sale", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<float>("subtotal")
                        .HasColumnType("real");

                    b.Property<float>("tax")
                        .HasColumnType("real");

                    b.Property<DateTime>("timeStamp")
                        .HasColumnType("datetime2");

                    b.Property<float>("total")
                        .HasColumnType("real");

                    b.Property<string>("userId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("sale");
                });

            modelBuilder.Entity("EcommerceProject.Models.Cart", b =>
                {
                    b.HasOne("EcommerceProject.Models.Product", "prod")
                        .WithMany()
                        .HasForeignKey("prodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("prod");
                });

            modelBuilder.Entity("EcommerceProject.Models.Inventory", b =>
                {
                    b.HasOne("EcommerceProject.Models.Product", "prod")
                        .WithMany()
                        .HasForeignKey("prodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("prod");
                });

            modelBuilder.Entity("EcommerceProject.Models.Product", b =>
                {
                    b.HasOne("EcommerceProject.Models.Category", "categ")
                        .WithMany()
                        .HasForeignKey("categId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categ");
                });

            modelBuilder.Entity("EcommerceProject.Models.ProductsSold", b =>
                {
                    b.HasOne("EcommerceProject.Models.Product", "prod")
                        .WithMany()
                        .HasForeignKey("prodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("prod");
                });
#pragma warning restore 612, 618
        }
    }
}
